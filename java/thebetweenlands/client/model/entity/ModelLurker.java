package thebetweenlands.client.model.entity;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;
import thebetweenlands.entities.mobs.EntityLurker;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;

@SideOnly(Side.CLIENT)
public class ModelLurker extends ModelBase {
	ModelRenderer torso1;
	ModelRenderer torso2;
	ModelRenderer torso3;
	ModelRenderer torso4;
	ModelRenderer tail1;
	ModelRenderer tail2;
	ModelRenderer tail3;
	ModelRenderer tailfin1;
	ModelRenderer tailfin2;
	ModelRenderer tailfin3;
	ModelRenderer bump1;
	ModelRenderer bump2;
	ModelRenderer bump3;
	ModelRenderer head1;
	ModelRenderer jawbottom;
	ModelRenderer jawtop;
	ModelRenderer tooth1left;
	ModelRenderer tooth1right;
	ModelRenderer tooth2left;
	ModelRenderer tooth2right;
	ModelRenderer tooth3left;
	ModelRenderer tooth3right;
	ModelRenderer horn1;
	ModelRenderer horn2;
	ModelRenderer finleft1;
	ModelRenderer finright1;
	ModelRenderer finleft2;
	ModelRenderer finright2;
	ModelRenderer finleft3;
	ModelRenderer finright3;
	ModelRenderer nailleft1;
	ModelRenderer nailright1;
	ModelRenderer nailleft2;
	ModelRenderer nailright2;

	public ModelLurker() {
		textureWidth = 256;
		textureHeight = 128;
		initModel();
	}

	private void initModel() {
		boxList.clear();
		torso1 = new ModelRenderer(this, 0, 0);
		torso1.addBox(-5F, 0F, 0F, 10, 10, 22);
		torso1.setRotationPoint(0F, 11F, -11F);
		setRotation(torso1, 0F, 0F, 0F);
		torso2 = new ModelRenderer(this, 0, 33);
		torso2.addBox(-5.5F, -0.5F, 3F, 11, 8, 16);
		torso2.setRotationPoint(0F, 11F, -11F);
		setRotation(torso2, 0F, 0F, 0F);
		torso3 = new ModelRenderer(this, 0, 58);
		torso3.addBox(-3.5F, 1.5F, -1.5F, 7, 7, 2);
		torso3.setRotationPoint(0F, 11F, -11F);
		setRotation(torso3, 0F, 0F, 0F);
		torso4 = new ModelRenderer(this, 20, 58);
		torso4.addBox(-4F, 0F, 0F, 8, 8, 6);
		torso4.setRotationPoint(0F, 11F, 11F);
		setRotation(torso4, -0.0371786F, 0F, 0F);
		tail1 = new ModelRenderer(this, 0, 74);
		tail1.addBox(-3F, 0F, 0F, 6, 7, 7);
		tail1.setRotationPoint(0F, 11.25F, 17F);
		setRotation(tail1, -0.0743572F, 0F, 0F);
		tail2 = new ModelRenderer(this, 0, 90);
		tail2.addBox(-2F, 0F, 0F, 4, 5, 8);
		tail2.setRotationPoint(0F, 0.75F, 7F);
		setRotation(tail2, -0.0743572F, 0F, 0F);
		tail3 = new ModelRenderer(this, 0, 105);
		tail3.addBox(-1.5F, 0F, 0F, 3, 4, 9);
		tail3.setRotationPoint(0F, 1.75F, 14.8F);
		setRotation(tail3, -0.0743572F, 0F, 0F);
		tailfin1 = new ModelRenderer(this, 28, 74);
		tailfin1.addBox(-0.5F, -13F, 5F, 1, 9, 4);
		tailfin1.setRotationPoint(0F, 1.75F, 14.8F);
		setRotation(tailfin1, -0.8179295F, 0F, 0F);
		tailfin2 = new ModelRenderer(this, 40, 74);
		tailfin2.addBox(-0.5F, 7.5F, 1.5F, 1, 7, 3);
		tailfin2.setRotationPoint(0F, 1.75F, 14.8F);
		setRotation(tailfin2, 0.5576792F, 0F, 0F);
		tailfin3 = new ModelRenderer(this, 49, 74);
		tailfin3.addBox(-0.5F, 4F, -1F, 1, 4, 2);
		tailfin3.setRotationPoint(0F, 1.75F, 14.8F);
		setRotation(tailfin3, 0.3717861F, 0F, 0F);
		bump1 = new ModelRenderer(this, 66, 0);
		bump1.addBox(-1.5F, -2F, 4F, 3, 2, 3);
		bump1.setRotationPoint(0F, 11F, -11F);
		setRotation(bump1, -0.0940825F, 0F, 0F);
		bump2 = new ModelRenderer(this, 66, 7);
		bump2.addBox(-1F, -2F, 10F, 2, 2, 2);
		bump2.setRotationPoint(0F, 11F, -11F);
		setRotation(bump2, -0.0766374F, 0F, 0F);
		bump3 = new ModelRenderer(this, 66, 13);
		bump3.addBox(-1F, -2F, 15F, 2, 2, 2);
		bump3.setRotationPoint(0F, 11F, -11F);
		setRotation(bump3, -0.0591841F, 0F, 0F);
		head1 = new ModelRenderer(this, 95, 0);
		head1.addBox(-4F, -2F, -6F, 8, 7, 6);
		head1.setRotationPoint(0F, 14F, -12F);
		setRotation(head1, 0.0743572F, 0F, 0F);
		jawbottom = new ModelRenderer(this, 95, 15);
		jawbottom.addBox(-4.5F, -2.5F, -13F, 9, 4, 16);
		jawbottom.setRotationPoint(0F, 18F, -16F);
		setRotation(jawbottom, 0.074351F, 0F, 0F);
		jawtop = new ModelRenderer(this, 95, 36);
		jawtop.addBox(-3.5F, -1F, -11F, 7, 3, 12);
		jawtop.setRotationPoint(0F, 14F, -18F);
		setRotation(jawtop, 0.1858869F, 0F, 0F);
		tooth1left = new ModelRenderer(this, 95, 53);
		tooth1left.addBox(3.5F, -7F, -15F, 1, 3, 1);
		tooth1left.setRotationPoint(0F, 14F, -12F);
		setRotation(tooth1left, 0.4089647F, 0F, 0.1487144F);
		tooth1right = new ModelRenderer(this, 101, 53);
		tooth1right.addBox(-4.5F, -7F, -15F, 1, 3, 1);
		tooth1right.setRotationPoint(0F, 14F, -12F);
		setRotation(tooth1right, 0.4089647F, 0F, -0.1487195F);
		tooth2left = new ModelRenderer(this, 107, 53);
		tooth2left.addBox(2.5F, -2F, -14F, 1, 1, 1);
		tooth2left.setRotationPoint(0F, 14F, -12F);
		setRotation(tooth2left, 0.2230717F, -0.0743572F, 0.1487144F);
		tooth2right = new ModelRenderer(this, 112, 53);
		tooth2right.addBox(-3.5F, -2F, -14F, 1, 1, 1);
		tooth2right.setRotationPoint(0F, 14F, -12F);
		setRotation(tooth2right, 0.2230717F, 0.074351F, -0.1487195F);
		tooth3left = new ModelRenderer(this, 118, 53);
		tooth3left.addBox(3.5F, -2F, -11F, 1, 1, 1);
		tooth3left.setRotationPoint(0F, 14F, -12F);
		setRotation(tooth3left, 0.2602503F, 0F, 0.1487144F);
		tooth3right = new ModelRenderer(this, 123, 53);
		tooth3right.addBox(-4.5F, -2F, -11F, 1, 1, 1);
		tooth3right.setRotationPoint(0F, 14F, -12F);
		setRotation(tooth3right, 0.2602503F, 0F, -0.1487195F);
		horn1 = new ModelRenderer(this, 129, 53);
		horn1.addBox(-1F, -1.5F, -8F, 2, 1, 2);
		horn1.setRotationPoint(0F, 14F, -18F);
		setRotation(horn1, 0.185895F, 0F, 0F);
		horn2 = new ModelRenderer(this, 129, 57);
		horn2.addBox(-0.5F, -1.5F, -3F, 1, 1, 1);
		horn2.setRotationPoint(0F, 14F, -18F);
		setRotation(horn2, 0.185895F, 0F, 0F);
		finleft1 = new ModelRenderer(this, 155, 0);
		finleft1.addBox(0F, 0F, -1F, 5, 2, 3);
		finleft1.setRotationPoint(4F, 18F, -8F);
		setRotation(finleft1, -0.2602503F, 0.2230717F, 0.4461433F);
		finright1 = new ModelRenderer(this, 172, 0);
		finright1.addBox(0F, 0F, -2F, 5, 2, 3);
		finright1.setRotationPoint(-4F, 18F, -8F);
		setRotation(finright1, 0.260246F, 2.918522F, -0.4461411F);
		finleft2 = new ModelRenderer(this, 155, 7);
		finleft2.addBox(2F, 0.5F, 0F, 5, 1, 8);
		finleft2.setRotationPoint(4F, 18F, -8F);
		setRotation(finleft2, -0.260246F, 0.4461411F, 0.4461433F);
		finright2 = new ModelRenderer(this, 182, 7);
		finright2.addBox(-7F, 0.5F, 0F, 5, 1, 8);
		finright2.setRotationPoint(-4F, 18F, -8F);
		setRotation(finright2, -0.260246F, -0.4461411F, -0.4461411F);
		finleft3 = new ModelRenderer(this, 155, 18);
		finleft3.addBox(0F, -1F, -0.5F, 4, 1, 8);
		finleft3.setRotationPoint(4F, 20F, 5F);
		setRotation(finleft3, -0.260246F, 0.4461411F, 0.4461411F);
		finright3 = new ModelRenderer(this, 181, 18);
		finright3.addBox(-4F, -1F, -0.5F, 4, 1, 8);
		finright3.setRotationPoint(-4F, 20F, 5F);
		setRotation(finright3, -0.260246F, -0.4461411F, -0.4461411F);
		nailleft1 = new ModelRenderer(this, 155, 30);
		nailleft1.addBox(5.5F, -0.2F, 7F, 1, 1, 2);
		nailleft1.setRotationPoint(4F, 18F, -8F);
		setRotation(nailleft1, -0.3346033F, 0.4461411F, 0.4461411F);
		nailright1 = new ModelRenderer(this, 162, 30);
		nailright1.addBox(-6.5F, -0.2F, 7F, 1, 1, 2);
		nailright1.setRotationPoint(-4F, 18F, -8F);
		setRotation(nailright1, -0.3346033F, -0.4461411F, -0.4461411F);
		nailleft2 = new ModelRenderer(this, 170, 30);
		nailleft2.addBox(3.5F, -0.2F, 7.3F, 1, 1, 1);
		nailleft2.setRotationPoint(4F, 18F, -8F);
		setRotation(nailleft2, -0.3345971F, 0.4461411F, 0.4461411F);
		nailright2 = new ModelRenderer(this, 176, 30);
		nailright2.addBox(-4.5F, -0.2F, 7.2F, 1, 1, 1);
		nailright2.setRotationPoint(-4F, 18F, -8F);
		setRotation(nailright2, -0.3345971F, -0.4461411F, -0.4461411F);
		
		tail1.addChild(tail2);
		tail1.addChild(tail3);
		tail1.addChild(tailfin1);
		tail1.addChild(tailfin2);
		tail1.addChild(tailfin3);
	}

	@Override
	public void render(Entity entity, float limbSwing, float limbSwingAngle, float ticksExisted, float rotationYaw, float rotationPitch, float scale) {
		setRotationAngles(limbSwing, limbSwingAngle, ticksExisted, rotationYaw, rotationPitch, scale, entity);
		torso1.render(scale);
		torso2.render(scale);
		torso3.render(scale);
		torso4.render(scale);
		tail1.render(scale);
		bump1.render(scale);
		bump2.render(scale);
		bump3.render(scale);
		head1.render(scale);
		jawbottom.render(scale);
		jawtop.render(scale);
		tooth1left.render(scale);
		tooth1right.render(scale);
		tooth2left.render(scale);
		tooth2right.render(scale);
		tooth3left.render(scale);
		tooth3right.render(scale);
		horn1.render(scale);
		horn2.render(scale);
		finleft1.render(scale);
		finright1.render(scale);
		finleft2.render(scale);
		finright2.render(scale);
		finleft3.render(scale);
		finright3.render(scale);
		nailleft1.render(scale);
		nailright1.render(scale);
		nailleft2.render(scale);
		nailright2.render(scale);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setLivingAnimations(EntityLivingBase entity, float swing, float speed, float partialRenderTicks) {
		EntityLurker lurker = (EntityLurker) entity;
		tail1.rotateAngleY = -0.05F + lurker.moveProgress * 0.2F;
		tail2.rotateAngleY = tail1.rotateAngleY * 1.2F;
		tail3.rotateAngleY = tail1.rotateAngleY * 1.4F;
		tailfin1.rotateAngleY = tail1.rotateAngleY * 1.4F;
		tailfin2.rotateAngleY = tail1.rotateAngleY * 1.6F;
		tailfin3.rotateAngleY = tail1.rotateAngleY * 1.6F;
	}
}